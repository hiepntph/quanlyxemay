// <auto-generated />
using System;
using EF_CODEFIRST_FLUENT_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_CODEFIRST_FLUENT_API.Migrations
{
    [DbContext(typeof(Connection_DBContext))]
    partial class Connection_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Category", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Category_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Color", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Color_Id")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Color_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Customer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Customer_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("Date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("First_name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Last_name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Middle_name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Employee", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("date");

                    b.Property<DateTime>("Date_Of_Join")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Employee_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Employee_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("First_name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Last_name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Middle_name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid>("Position_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Send_report_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("Store_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Position_Id");

                    b.HasIndex("Send_report_Id");

                    b.HasIndex("Store_Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Event", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount_Rate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Discount_Unit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("End_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Event_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Event_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Start_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Event_Detail", b =>
                {
                    b.Property<Guid?>("Event_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_Detail_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Event_Id", "Product_Detail_Id");

                    b.HasIndex("Product_Detail_Id");

                    b.ToTable("Event_Detail");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Amound_Paid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("Customer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("Date_of_Payment")
                        .HasColumnType("date");

                    b.Property<Guid?>("Employee_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Invoice_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Total_Money")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Invoice_Detail", b =>
                {
                    b.Property<Guid>("Invoice_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_Detail_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Total_Money")
                        .IsRequired()
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("Unit_price_when_reduced")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Invoice_Id", "Product_Detail_Id")
                        .HasName("PK_HoaDonCT");

                    b.HasIndex("Product_Detail_Id");

                    b.ToTable("Invoice_Detail");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Position_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Producer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Producer_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("Category_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Color_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Of_Manufacture")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date_Of_entry")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date_Of_inventory")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Expiry")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Import_Price")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Month_Warranty")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("Producer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity_in_stock")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Color_Id");

                    b.HasIndex("Producer_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("Product_Detail");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Save_Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("Customer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Save_Date")
                        .HasColumnType("date");

                    b.Property<string>("Save_Product_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("Save_Product");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Save_Product_Detail", b =>
                {
                    b.Property<Guid>("Save_Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_Detail_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Unit_Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Unit_price_when_reduced")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Save_Product_Id", "Product_Detail_Id");

                    b.HasIndex("Product_Detail_Id");

                    b.ToTable("Save_Product_Detail");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Store", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Store_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Store_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Ware_House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Ware_House_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ware_House_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ware_House");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Ware_House_Detail", b =>
                {
                    b.Property<Guid>("Ware_House_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_Detail_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity_entered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Quantity_in_stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Ware_House_Id", "Product_Detail_Id");

                    b.HasIndex("Product_Detail_Id");

                    b.ToTable("Ware_House_Detail");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Warranty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CustomerId_NavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Customer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId_NavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Employee_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("date");

                    b.Property<string>("License_Plate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("Product_Detail_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("date");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId_NavigationId");

                    b.HasIndex("EmployeeId_NavigationId");

                    b.HasIndex("Product_Detail_Id");

                    b.ToTable("Warranty");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Employee", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Position", "PositionId_Navigation")
                        .WithMany("Employees")
                        .HasForeignKey("Position_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Employee", "Send_ReportId_Navigation")
                        .WithMany("InverseIdSend_ReportNavigations")
                        .HasForeignKey("Send_report_Id");

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Store", "StoreId_Navigation")
                        .WithMany("Employees")
                        .HasForeignKey("Store_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PositionId_Navigation");

                    b.Navigation("Send_ReportId_Navigation");

                    b.Navigation("StoreId_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Event_Detail", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Event", "Event_Id_Navigation")
                        .WithMany("Event_Details")
                        .HasForeignKey("Event_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", "Product_Detail_Id_Navigation")
                        .WithMany("Event_Details")
                        .HasForeignKey("Product_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event_Id_Navigation");

                    b.Navigation("Product_Detail_Id_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Invoice", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Customer", "CustomerId_Navigation")
                        .WithMany("Invoices")
                        .HasForeignKey("Customer_Id");

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Employee", "EmployeeId_Navigation")
                        .WithMany("Invoices")
                        .HasForeignKey("Employee_Id");

                    b.Navigation("CustomerId_Navigation");

                    b.Navigation("EmployeeId_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Invoice_Detail", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Invoice", "Invoice_Id_Navigation")
                        .WithMany("Invoice_Details")
                        .HasForeignKey("Invoice_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", "Product_Detail_IdNavigation")
                        .WithMany("Invoice_Details")
                        .HasForeignKey("Product_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice_Id_Navigation");

                    b.Navigation("Product_Detail_IdNavigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Category", "CategoryId_Nagation")
                        .WithMany("Product_Details")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Color", "ColorId_Navigation")
                        .WithMany("Product_Details")
                        .HasForeignKey("Color_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Producer", "ProducerId_Navigation")
                        .WithMany("Product_Details")
                        .HasForeignKey("Producer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Product", "ProductId_Navigation")
                        .WithMany("Product_Details")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryId_Nagation");

                    b.Navigation("ColorId_Navigation");

                    b.Navigation("ProducerId_Navigation");

                    b.Navigation("ProductId_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Save_Product", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Customer", "Customer_Id_Navigation")
                        .WithMany("Save_Products")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer_Id_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Save_Product_Detail", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", "Product_Detail_Id_Navigation")
                        .WithMany("Save_Product_Details")
                        .HasForeignKey("Product_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Save_Product", "Save_Product_Id_Navigation")
                        .WithMany("Save_Product_Details")
                        .HasForeignKey("Save_Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_Detail_Id_Navigation");

                    b.Navigation("Save_Product_Id_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Ware_House_Detail", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", "Product_Detail_Id_Navigation")
                        .WithMany("Ware_House_Details")
                        .HasForeignKey("Product_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Ware_House", "Ware_HouseId_Navigation")
                        .WithMany("Ware_House_Details")
                        .HasForeignKey("Ware_House_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_Detail_Id_Navigation");

                    b.Navigation("Ware_HouseId_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Warranty", b =>
                {
                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Customer", "CustomerId_Navigation")
                        .WithMany()
                        .HasForeignKey("CustomerId_NavigationId");

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Employee", "EmployeeId_Navigation")
                        .WithMany()
                        .HasForeignKey("EmployeeId_NavigationId");

                    b.HasOne("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", "Product_Detail_Id_Navigation")
                        .WithMany("Warranties")
                        .HasForeignKey("Product_Detail_Id");

                    b.Navigation("CustomerId_Navigation");

                    b.Navigation("EmployeeId_Navigation");

                    b.Navigation("Product_Detail_Id_Navigation");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Category", b =>
                {
                    b.Navigation("Product_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Color", b =>
                {
                    b.Navigation("Product_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Save_Products");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Employee", b =>
                {
                    b.Navigation("InverseIdSend_ReportNavigations");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Event", b =>
                {
                    b.Navigation("Event_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Invoice", b =>
                {
                    b.Navigation("Invoice_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Producer", b =>
                {
                    b.Navigation("Product_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Product", b =>
                {
                    b.Navigation("Product_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Product_Detail", b =>
                {
                    b.Navigation("Event_Details");

                    b.Navigation("Invoice_Details");

                    b.Navigation("Save_Product_Details");

                    b.Navigation("Ware_House_Details");

                    b.Navigation("Warranties");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Save_Product", b =>
                {
                    b.Navigation("Save_Product_Details");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Store", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EF_CODEFIRST_FLUENT_API.DomainClass.Ware_House", b =>
                {
                    b.Navigation("Ware_House_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
